# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-23 14:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='主机名')),
                ('ip', models.GenericIPAddressField(verbose_name='主机IP')),
            ],
        ),
        migrations.CreateModel(
            name='MaintainGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=64, verbose_name='维护广告页面组名')),
                ('tag', models.CharField(max_length=64, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='MaintainRealServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_name', models.CharField(max_length=64, verbose_name='应用名')),
                ('ip', models.GenericIPAddressField(verbose_name='IP')),
                ('port', models.IntegerField(verbose_name='服务端口')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nginx.Host')),
            ],
        ),
        migrations.CreateModel(
            name='ProxyServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(verbose_name='IP address')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nginx.Host', verbose_name='主机')),
            ],
        ),
        migrations.CreateModel(
            name='ProxyServerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=64, verbose_name='proxy server组名')),
                ('port', models.BigIntegerField(default=17818, verbose_name='Dynamic Upstream控制端口')),
                ('dir', models.CharField(default='du', max_length=64, verbose_name='Dynamic Upstream控制目录')),
                ('user', models.CharField(default='user', max_length=64, verbose_name='Dynamic Upstream登录用户')),
                ('pwd', models.CharField(default='password', max_length=64, verbose_name='Dynamic Upstream登录密码')),
                ('tag', models.CharField(max_length=20, null=True, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='RealServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_name', models.CharField(default=None, max_length=64, verbose_name='应用名')),
                ('ip', models.GenericIPAddressField()),
                ('service_port', models.IntegerField(verbose_name='服务端口')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nginx.Host', verbose_name='主机')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=64, verbose_name='站点名')),
                ('maintain_status', models.IntegerField(choices=[(0, '运行中'), (1, '维护中')], default=0, help_text='0:运行中  1:维护中  初始值为0', verbose_name='维护状态')),
                ('maintain_page_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nginx.MaintainGroup', verbose_name='维护页面组')),
                ('proxy_server_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_site', to='nginx.ProxyServerGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Upstream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upstream_name', models.CharField(max_length=64, verbose_name='upstream name')),
                ('zone', models.CharField(help_text='zone值必须与nginx配置文件中相应站点的zone相同', max_length=64, verbose_name='zone name')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='昵称')),
                ('head_portrait_width', models.PositiveIntegerField(default=25)),
                ('head_portrait_height', models.PositiveIntegerField(default=25)),
                ('head_portrait', models.ImageField(blank=True, height_field='head_portrait_height', null=True, upload_to='upload/user_image', verbose_name='头像', width_field='head_portrait_width')),
                ('login_status', models.IntegerField(default=0, verbose_name='用户登录状态')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='site',
            name='upstream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upstream_site', to='nginx.Upstream'),
        ),
        migrations.AddField(
            model_name='realserver',
            name='upstream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upstream_realserver', to='nginx.Upstream'),
        ),
        migrations.AddField(
            model_name='proxyserver',
            name='proxy_server_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_server', to='nginx.ProxyServerGroup'),
        ),
        migrations.AddField(
            model_name='maintaingroup',
            name='real_server',
            field=models.ManyToManyField(to='nginx.MaintainRealServer'),
        ),
    ]
